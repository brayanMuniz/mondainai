// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>MondaiNAI</title><script src=\"https://cdn.tailwindcss.com\"></script><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script></head><body class=\"bg-slate-900\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- The script has been MOVED here, so it only loads once --><script>\n\t\t// This flag ensures we only attach listeners once, just in case.\n\t\tif (!window.htmxListenersAttached) {\n\t\t\tdocument.body.addEventListener('htmx:beforeRequest', function (evt) {\n\t\t\t\tif (evt.detail.elt.id !== 'chat-form') return;\n\n\t\t\t\tconst form = evt.detail.elt;\n\t\t\t\tconst messageInput = form.querySelector('input[name=\"message\"]');\n\t\t\t\tif (!messageInput) return;\n\t\t\t\tconst messageText = messageInput.value;\n\n\t\t\t\tif (!messageText.trim()) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst template = document.getElementById('user-message-template');\n\t\t\t\tif (!template) return;\n\t\t\t\tconst clone = template.content.cloneNode(true);\n\n\t\t\t\tclone.querySelector('.message-text').textContent = messageText;\n\n\t\t\t\tconst messagesContainer = document.getElementById('messages-container');\n\t\t\t\tif (!messagesContainer) return;\n\t\t\t\tmessagesContainer.appendChild(clone);\n\t\t\t\tmessagesContainer.scrollTop = messagesContainer.scrollHeight;\n\t\t\t});\n\n\t\t\tdocument.body.addEventListener('htmx:afterSwap', function (event) {\n\t\t\t\tconst messagesContainer = document.getElementById(\"messages-container\");\n\t\t\t\tif (messagesContainer) {\n\t\t\t\t\tmessagesContainer.scrollTop = messagesContainer.scrollHeight;\n\t\t\t\t}\n\t\t\t\tconst messageInput = document.querySelector('input[name=\"message\"]');\n\t\t\t\tif (messageInput) {\n\t\t\t\t\tmessageInput.focus();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.htmxListenersAttached = true;\n\t\t}\n\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
