package templates

import "github.com/brayanMuniz/mondainai/internal/llm"

templ ChatInterface(sessionId string, messages llm.MessageHistory) {
	<div id="chat-container" class="flex flex-col h-full">
		<div id="messages-container" class="flex-grow overflow-y-auto p-4 space-y-4">
			for _, msg := range messages.Messages {
				@messageBubble(msg)
			}
		</div>
		<form
			id="chat-form"
			hx-post={ "/character/chat/" + sessionId }
			hx-target="#papa-div"
			hx-swap="outerHTML"
			data-hx-on-htmx-after-request="this.reset()"
			class="flex-shrink-0 p-2"
		>
			<div class="flex">
				<input
					type="text"
					name="message"
					class="flex-grow bg-white border border-slate-300 rounded-l-lg p-3 text-slate-800 focus:outline-none focus:ring-2 focus:ring-blue-500"
					placeholder="ラーメン..."
					autocomplete="off"
					autofocus
				/>
				<button
					type="submit"
					class="bg-blue-500 text-white font-semibold px-6 py-3 rounded-r-lg hover:bg-blue-600 transition-colors"
				>
					Send
				</button>
			</div>
		</form>
	</div>
}

templ messageBubble(message llm.Message) {
	if message.Role == "user" && message.UserText != nil {
		<div class="flex justify-end my-2">
			<div class="bg-blue-500 text-white rounded-xl p-3 max-w-md shadow-md">
				<p>{ *message.UserText }</p>
			</div>
		</div>
	}
	if message.Role == "model" && message.ModelResponse != nil {
		<div class="flex justify-start my-2">
			<div class="bg-white text-slate-800 rounded-xl p-3 max-w-md shadow-md">
				<p>{ message.ModelResponse.Message }</p>
			</div>
		</div>
	}
}
